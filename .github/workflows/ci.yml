name: ðŸ‡¨â€Œâž•âž• â€¢ CI

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CTEST_PARALLEL_LEVEL: 3
  FORCE_COLOR: 3

jobs:
  cpp-tests-ubuntu:
    name: Tests â€¢ ubuntu-latest â€¢ ${{ matrix.config }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-tests-ubuntu-latest-${{ matrix.config }}
      - name: Set up mold as linker
        uses: rui314/setup-mold@v1
      - name: Install Ninja
        run: pipx install ninja
      - name: Configure CMake
        run: cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DDEPLOY=ON
      - name: Build
        run: cmake --build build --config ${{ matrix.config }}
      - name: Test
        run: ctest -C ${{ matrix.config }} --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300

  cpp-tests-macos:
    name: Tests â€¢ macos-latest â€¢ ${{ matrix.config }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-tests-macos-latest-${{ matrix.config }}
      - name: Install Ninja
        run: pipx install ninja
      - name: Configure CMake
        run: cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }}
      - name: Build
        run: cmake --build build --config ${{ matrix.config }}
      - name: Test
        run: ctest -C ${{ matrix.config }} --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300

  cpp-tests-windows:
    name: Tests â€¢ windows-latest â€¢ ${{ matrix.config }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          windows_compile_environment: msvc
          override_cache_key: c++-tests-windows-latest-${{ matrix.config }}
      - name: Configure CMake
        run: cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }}
      - name: Build
        run: cmake --build build --config ${{ matrix.config }}
      - name: Test
        run: ctest -C ${{ matrix.config }} --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300

  coverage:
    name: Coverage â€¢ ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-coverage
      - name: Set up mold as linker
        uses: rui314/setup-mold@v1
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON -DDEPLOY=ON
      - name: Build
        run: cmake --build build --config Debug
      - name: Test
        run: ctest -C Debug --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          gcov: true
          gcov_ignore: "extern/**/*"
          token: ${{ secrets.CODECOV_TOKEN }}

  cpp-ci-check:
    if: always()
    name: ðŸš¦ ðŸ‡¨â€Œâž•âž• Check
    needs: [cpp-tests-ubuntu, cpp-tests-macos, cpp-tests-windows, coverage]
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: deploy
          jobs: ${{ toJSON(needs) }}
